// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Dropdown.Body renders all children without crashing 1`] = `
<div
  className="body"
  id="reactist-dropdown-body"
  style={
    Object {
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  Body Content
</div>
`;

exports[`Dropdown Dropdown.Body renders all children without crashing 2`] = `
<div
  className="body"
  id="reactist-dropdown-body"
  style={
    Object {
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <div>
    <img
      alt=""
      src=""
    />
    Some additional text as well
  </div>
</div>
`;

exports[`Dropdown Dropdown.Body renders empty without crashing 1`] = `
<div
  className="body"
  id="reactist-dropdown-body"
  style={
    Object {
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
/>
`;

exports[`Dropdown Dropdown.Box renders the Body component first when top prop is provided 1`] = `
<Dropdown.Box
  top={true}
>
  <div
    className="reactist_dropdown"
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <div
      className="body_wrapper with_arrow top"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Dropdown.Body
        right={false}
        setPosition={[Function]}
        top={true}
      >
        <div
          className="body"
          id="reactist-dropdown-body"
          style={
            Object {
              "bottom": 0,
              "position": "absolute",
              "right": 0,
              "top": "auto",
            }
          }
        />
      </Dropdown.Body>
    </div>
    <Dropdown.Trigger
      onClick={[Function]}
    >
      <Button
        className="trigger"
        disabled={false}
        loading={false}
        onClick={[Function]}
        size="default"
      >
        <button
          aria-disabled={false}
          className="reactist_button trigger"
          onClick={[Function]}
          type="button"
        />
      </Button>
    </Dropdown.Trigger>
  </div>
</Dropdown.Box>
`;

exports[`Dropdown Dropdown.Box renders the Trigger component first when top prop is not provided 1`] = `
<Dropdown.Box>
  <div
    className="reactist_dropdown"
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <Dropdown.Trigger
      onClick={[Function]}
    >
      <Button
        className="trigger"
        disabled={false}
        loading={false}
        onClick={[Function]}
        size="default"
      >
        <button
          aria-disabled={false}
          className="reactist_button trigger"
          onClick={[Function]}
          type="button"
        />
      </Button>
    </Dropdown.Trigger>
    <div
      className="body_wrapper with_arrow bottom"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Dropdown.Body
        right={false}
        setPosition={[Function]}
        top={false}
      >
        <div
          className="body"
          id="reactist-dropdown-body"
          style={
            Object {
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </Dropdown.Body>
    </div>
  </div>
</Dropdown.Box>
`;

exports[`Dropdown Dropdown.Box renders the Trigger component without crashing 1`] = `
<Dropdown.Box>
  <div
    className="reactist_dropdown"
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <Dropdown.Trigger
      onClick={[Function]}
    >
      <Button
        className="trigger"
        disabled={false}
        loading={false}
        onClick={[Function]}
        size="default"
      >
        <button
          aria-disabled={false}
          className="reactist_button trigger"
          onClick={[Function]}
          type="button"
        />
      </Button>
    </Dropdown.Trigger>
  </div>
</Dropdown.Box>
`;

exports[`Dropdown Dropdown.Trigger renders all children without crashing 1`] = `
<Button
  className="trigger"
  disabled={false}
  loading={false}
  onClick={[Function]}
  size="default"
>
  Trigger Content
</Button>
`;

exports[`Dropdown Dropdown.Trigger renders all children without crashing 2`] = `
<Button
  className="trigger"
  disabled={false}
  loading={false}
  onClick={[Function]}
  size="default"
>
  <div>
    <img
      alt=""
      src=""
    />
    Some additional text as well
  </div>
</Button>
`;

exports[`Dropdown Dropdown.Trigger renders empty without crashing 1`] = `
<Button
  className="trigger"
  disabled={false}
  loading={false}
  onClick={[Function]}
  size="default"
/>
`;
