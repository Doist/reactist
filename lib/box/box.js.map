{"version":3,"file":"box.js","sources":["../../src/box/box.tsx"],"sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\nimport { polymorphicComponent } from '../utils/polymorphism'\nimport { getClassNames } from '../utils/responsive-props'\n\nimport type { ResponsiveProp } from '../utils/responsive-props'\nimport type {\n    DividerWeight,\n    Space,\n    SpaceWithNegatives,\n    WithEnhancedClassName,\n} from '../utils/common-types'\n\nimport styles from './box.module.css'\nimport paddingStyles from './padding.module.css'\nimport marginStyles from './margin.module.css'\nimport widthStyles from './width.module.css'\nimport gapStyles from './gap.module.css'\n\ninterface BoxPaddingProps {\n    padding?: ResponsiveProp<Space>\n    paddingX?: ResponsiveProp<Space>\n    paddingY?: ResponsiveProp<Space>\n    paddingTop?: ResponsiveProp<Space>\n    paddingRight?: ResponsiveProp<Space>\n    paddingBottom?: ResponsiveProp<Space>\n    paddingLeft?: ResponsiveProp<Space>\n}\n\ninterface BoxMarginProps {\n    margin?: ResponsiveProp<SpaceWithNegatives>\n    marginX?: ResponsiveProp<SpaceWithNegatives>\n    marginY?: ResponsiveProp<SpaceWithNegatives>\n    marginTop?: ResponsiveProp<SpaceWithNegatives>\n    marginRight?: ResponsiveProp<SpaceWithNegatives>\n    marginBottom?: ResponsiveProp<SpaceWithNegatives>\n    marginLeft?: ResponsiveProp<SpaceWithNegatives>\n}\n\ntype BoxDisplay = 'block' | 'flex' | 'inline' | 'inlineBlock' | 'inlineFlex' | 'none'\ntype BoxFlexDirection = 'column' | 'row'\ntype BoxFlexWrap = 'nowrap' | 'wrap'\ntype BoxAlignItems = 'center' | 'flexEnd' | 'flexStart' | 'baseline'\ntype BoxJustifyContent =\n    | 'center'\n    | 'flexEnd'\n    | 'flexStart'\n    | 'spaceAround'\n    | 'spaceBetween'\n    | 'spaceEvenly'\ntype BoxAlignSelf = 'flexStart' | 'flexEnd' | 'center' | 'baseline' | 'stretch'\ntype BoxOverflow = 'hidden' | 'auto' | 'visible' | 'scroll'\n\ntype BoxMaxMinWidth = 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge'\ntype BoxMinWidth = 0 | BoxMaxMinWidth\ntype BoxMaxWidth = BoxMaxMinWidth | 'full'\ntype BoxWidth = 0 | BoxMaxMinWidth | 'full' | 'auto' | 'maxContent' | 'minContent' | 'fitContent'\ntype BoxBackground = 'default' | 'aside' | 'highlight' | 'selected' | 'toast'\ntype BoxBorderRadius = 'standard' | 'none' | 'full'\n\ninterface BorderProps {\n    borderRadius?: BoxBorderRadius\n    border?: DividerWeight\n}\n\ninterface ReusableBoxProps extends BorderProps, BoxPaddingProps {\n    minWidth?: BoxMinWidth\n    maxWidth?: BoxMaxWidth\n    width?: BoxWidth\n    background?: BoxBackground\n    flexGrow?: 0 | 1\n    flexShrink?: 0\n}\n\ntype BoxPosition = 'absolute' | 'fixed' | 'relative' | 'static' | 'sticky'\ntype BoxTextAlign = 'start' | 'center' | 'end' | 'justify'\n\ninterface BoxProps extends WithEnhancedClassName, ReusableBoxProps, BoxMarginProps {\n    position?: ResponsiveProp<BoxPosition>\n    display?: ResponsiveProp<BoxDisplay>\n    flexDirection?: ResponsiveProp<BoxFlexDirection>\n    flexWrap?: BoxFlexWrap\n    gap?: ResponsiveProp<Space | 'none'>\n    alignItems?: ResponsiveProp<BoxAlignItems>\n    alignSelf?: ResponsiveProp<BoxAlignSelf>\n    justifyContent?: ResponsiveProp<BoxJustifyContent>\n    overflow?: BoxOverflow\n    height?: 'full'\n    textAlign?: ResponsiveProp<BoxTextAlign>\n}\n\nfunction getBoxClassNames({\n    position = 'static',\n    display,\n    flexDirection = 'row',\n    flexWrap,\n    flexGrow,\n    flexShrink,\n    gap,\n    alignItems,\n    justifyContent,\n    alignSelf,\n    overflow,\n    width,\n    height,\n    background,\n    border,\n    borderRadius,\n    minWidth,\n    maxWidth,\n    textAlign,\n    padding,\n    paddingY,\n    paddingX,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    margin,\n    marginY,\n    marginX,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    className,\n}: BoxProps) {\n    const resolvedPaddingTop = paddingTop ?? paddingY ?? padding\n    const resolvedPaddingRight = paddingRight ?? paddingX ?? padding\n    const resolvedPaddingBottom = paddingBottom ?? paddingY ?? padding\n    const resolvedPaddingLeft = paddingLeft ?? paddingX ?? padding\n\n    const resolvedMarginTop = marginTop ?? marginY ?? margin\n    const resolvedMarginRight = marginRight ?? marginX ?? margin\n    const resolvedMarginBottom = marginBottom ?? marginY ?? margin\n    const resolvedMarginLeft = marginLeft ?? marginX ?? margin\n\n    const omitFlex =\n        !display || (typeof display === 'string' && display !== 'flex' && display !== 'inlineFlex')\n\n    return classNames(\n        className,\n        styles.box,\n        display ? getClassNames(styles, 'display', display) : null,\n        position !== 'static' ? getClassNames(styles, 'position', position) : null,\n        minWidth != null ? getClassNames(widthStyles, 'minWidth', String(minWidth)) : null,\n        getClassNames(widthStyles, 'maxWidth', maxWidth),\n        getClassNames(styles, 'textAlign', textAlign),\n        // padding\n        getClassNames(paddingStyles, 'paddingTop', resolvedPaddingTop),\n        getClassNames(paddingStyles, 'paddingRight', resolvedPaddingRight),\n        getClassNames(paddingStyles, 'paddingBottom', resolvedPaddingBottom),\n        getClassNames(paddingStyles, 'paddingLeft', resolvedPaddingLeft),\n        // margin\n        getClassNames(marginStyles, 'marginTop', resolvedMarginTop),\n        getClassNames(marginStyles, 'marginRight', resolvedMarginRight),\n        getClassNames(marginStyles, 'marginBottom', resolvedMarginBottom),\n        getClassNames(marginStyles, 'marginLeft', resolvedMarginLeft),\n        // flex props\n        omitFlex ? null : getClassNames(styles, 'flexDirection', flexDirection),\n        omitFlex ? null : getClassNames(styles, 'flexWrap', flexWrap),\n        omitFlex ? null : getClassNames(styles, 'alignItems', alignItems),\n        omitFlex ? null : getClassNames(styles, 'justifyContent', justifyContent),\n        alignSelf != null ? getClassNames(styles, 'alignSelf', alignSelf) : null,\n        flexShrink != null ? getClassNames(styles, 'flexShrink', String(flexShrink)) : null,\n        flexGrow != null ? getClassNames(styles, 'flexGrow', String(flexGrow)) : null,\n        gap ? getClassNames(gapStyles, 'gap', gap) : null,\n        // other props\n        getClassNames(styles, 'overflow', overflow),\n        width != null ? getClassNames(widthStyles, 'width', String(width)) : null,\n        getClassNames(styles, 'height', height),\n        getClassNames(styles, 'bg', background),\n        borderRadius !== 'none' ? getClassNames(styles, 'borderRadius', borderRadius) : null,\n        border !== 'none' ? getClassNames(styles, 'border', border) : null,\n    )\n}\n\nconst Box = polymorphicComponent<'div', BoxProps, 'keepClassName'>(function Box(\n    {\n        as: component = 'div',\n        position = 'static',\n        display,\n        flexDirection = 'row',\n        flexWrap,\n        flexGrow,\n        flexShrink,\n        gap,\n        alignItems,\n        justifyContent,\n        alignSelf,\n        overflow,\n        width,\n        height,\n        background,\n        border,\n        borderRadius,\n        minWidth,\n        maxWidth,\n        textAlign,\n        padding,\n        paddingY,\n        paddingX,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        margin,\n        marginY,\n        marginX,\n        marginTop,\n        marginRight,\n        marginBottom,\n        marginLeft,\n        className,\n        children,\n        ...props\n    },\n    ref,\n) {\n    return React.createElement(\n        component,\n        {\n            ...props,\n            className: getBoxClassNames({\n                position,\n                display,\n                flexDirection,\n                flexWrap,\n                flexGrow,\n                flexShrink,\n                gap,\n                alignItems,\n                justifyContent,\n                alignSelf,\n                overflow,\n                width,\n                height,\n                background,\n                border,\n                borderRadius,\n                minWidth,\n                maxWidth,\n                textAlign,\n                padding,\n                paddingY,\n                paddingX,\n                paddingTop,\n                paddingRight,\n                paddingBottom,\n                paddingLeft,\n                margin,\n                marginY,\n                marginX,\n                marginTop,\n                marginRight,\n                marginBottom,\n                marginLeft,\n                className,\n            }),\n            ref,\n        },\n        children,\n    )\n})\n\nexport type {\n    BoxProps,\n    BoxPaddingProps,\n    BoxMarginProps,\n    ReusableBoxProps,\n    BoxMinWidth,\n    BoxMaxWidth,\n    BoxDisplay,\n    BoxPosition,\n    BoxFlexDirection,\n    BoxFlexWrap,\n    BoxAlignItems,\n    BoxJustifyContent,\n    BoxOverflow,\n    BoxTextAlign,\n    BoxBackground,\n    BoxBorderRadius,\n}\n\nexport { Box, getBoxClassNames }\n"],"names":["getBoxClassNames","position","display","flexDirection","flexWrap","flexGrow","flexShrink","gap","alignItems","justifyContent","alignSelf","overflow","width","height","background","border","borderRadius","minWidth","maxWidth","textAlign","padding","paddingY","paddingX","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginY","marginX","marginTop","marginRight","marginBottom","marginLeft","className","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","resolvedPaddingTop","resolvedPaddingRight","resolvedPaddingBottom","resolvedPaddingLeft","resolvedMarginTop","resolvedMarginRight","resolvedMarginBottom","resolvedMarginLeft","omitFlex","classNames","styles","box","getClassNames","widthStyles","String","paddingStyles","marginStyles","gapStyles","polymorphicComponent","_ref9","ref","as","component","children","props","_objectWithoutProperties","objectWithoutProperties","_excluded","React","createElement"],"mappings":"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"}