{"version":3,"file":"select.js","sources":["../../../src/components/deprecated-select/select.tsx"],"sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\n\nimport './select.less'\n\ntype Option = {\n    /** Optional key for each option. If not provided `value` is used. */\n    key?: string | number\n    /** Value of the option. */\n    value: string | number\n    /** Text to display for the option. */\n    text?: string | number\n    /** Whether the options is disabled or not. */\n    disabled?: boolean\n}\n\ntype Props = {\n    className?: string\n    disabled?: boolean\n    /** Currently selected value. */\n    value?: string | number\n    /** Callback for the change event. Will be called with the next value (not the full event). */\n    onChange?: (value: string) => void\n    /** Options that are rendered in the select. */\n    options?: Option[]\n    /** Value to initially be set */\n    defaultValue?: string | number\n}\n\nfunction Select({\n    value,\n    options = [],\n    onChange,\n    disabled = true,\n    className = '',\n    defaultValue,\n    ...otherProps\n}: Props) {\n    const selectClassName = classNames('reactist_select', { disabled }, className)\n    return (\n        <select\n            className={selectClassName}\n            value={value}\n            onChange={(event) => (onChange ? onChange(event.target.value) : undefined)}\n            disabled={disabled}\n            defaultValue={defaultValue}\n            {...otherProps}\n        >\n            {options?.map((option) => (\n                <option\n                    key={option.key || option.value}\n                    value={option.value}\n                    disabled={option.disabled}\n                >\n                    {option.text}\n                </option>\n            ))}\n        </select>\n    )\n}\nSelect.displayName = 'Select'\nSelect.defaultProps = {\n    options: [],\n    disabled: false,\n}\n\nexport { Select }\n"],"names":["Select","_ref","value","options","onChange","disabled","className","defaultValue","otherProps","_objectWithoutProperties","objectWithoutProperties","_excluded","selectClassName","classNames","React","createElement","_objectSpread","event","target","undefined","map","option","key","text","displayName","defaultProps"],"mappings":"mmBA6BA,SAASA,EAQDC,GAAA,IARQC,MACZA,EADYC,QAEZA,EAAU,GAFEC,SAGZA,EAHYC,SAIZA,GAAW,EAJCC,UAKZA,EAAY,GALAC,aAMZA,GAEIN,EADDO,EACCC,EAAAC,wBAAAT,EAAAU,GACJ,MAAMC,EAAkBC,EAAU,QAAC,kBAAmB,CAAER,SAAAA,GAAYC,GACpE,OACIQ,EACIC,cAAA,SADJC,gBAAA,CACIV,UAAWM,EACXV,MAAOA,EACPE,SAAWa,GAAWb,EAAWA,EAASa,EAAMC,OAAOhB,YAASiB,EAChEd,SAAUA,EACVE,aAAcA,GACVC,GANR,MAQKL,OARL,EAQKA,EAASiB,IAAKC,GACXP,EAAAC,cAAA,SAAA,CACIO,IAAKD,EAAOC,KAAOD,EAAOnB,MAC1BA,MAAOmB,EAAOnB,MACdG,SAAUgB,EAAOhB,UAEhBgB,EAAOE,QAM5BvB,EAAOwB,YAAc,SACrBxB,EAAOyB,aAAe,CAClBtB,QAAS,GACTE,UAAU"}