{"version":3,"file":"time.js","sources":["../../../src/components/time/time.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { Tooltip } from '../../tooltip'\nimport { TimeUtils, TimeConfig } from './time-utils'\n\nimport './time.less'\n\nconst DELAY = 60000\n\ntype Props = {\n    /** UNIX timestamp of the time to display. */\n    time?: number\n    /** Configuration for localization. */\n    config?: TimeConfig\n    /** Additional css class applied to the time element. */\n    className?: string\n    tooltipOnHover?: boolean\n    /** Refresh the component every DELAY seconds. */\n    refresh?: boolean\n    /** If you don't want to use the default time format on the tooltip use this prop to supply a custom text */\n    tooltip?: React.ReactNode\n    /** When hovering over time it expands to short absolute version. */\n    expandOnHover?: boolean\n    /** When hovering over time it expands to the full absolute version. */\n    expandFullyOnHover?: boolean\n}\n\ntype State = {\n    hovered: boolean\n    mouseX?: number\n    mouseY?: number\n}\n\nclass Time extends React.Component<Props, State> {\n    public static displayName: string\n    public static defaultProps: Props\n\n    constructor(props: Props) {\n        super(props)\n        this.refreshInterval = undefined\n\n        this.state = {\n            hovered: false,\n            mouseX: undefined,\n            mouseY: undefined,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.refresh) {\n            this._refresh()\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (!prevProps.refresh && this.props.refresh) {\n            this._refresh()\n        }\n\n        if (prevProps.refresh && !this.props.refresh) {\n            if (this.refreshInterval) {\n                clearTimeout(this.refreshInterval)\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.refreshInterval) {\n            clearTimeout(this.refreshInterval)\n        }\n    }\n\n    refreshInterval?: ReturnType<typeof setTimeout>\n\n    _setHovered(hovered: boolean, event: React.MouseEvent) {\n        const { mouseX, mouseY } = this.state\n        const { clientX, clientY } = event\n        if (clientX !== mouseX || clientY !== mouseY) {\n            // mouse has moved\n            this.setState(() => ({\n                hovered,\n                mouseX: clientX,\n                mouseY: clientY,\n            }))\n        }\n    }\n\n    _renderTime(config: Props['config']) {\n        if (!this.props.time) {\n            return\n        }\n        if (this.state.hovered) {\n            if (this.props.expandFullyOnHover && !this.props.tooltipOnHover) {\n                return TimeUtils.formatTimeLong(this.props.time, config)\n            }\n            if (this.props.expandOnHover && !this.props.tooltipOnHover) {\n                return TimeUtils.formatTime(this.props.time, config)\n            }\n        }\n        return TimeUtils.timeAgo(this.props.time, config)\n    }\n\n    _refresh() {\n        this.refreshInterval = setInterval(() => {\n            this.forceUpdate()\n        }, DELAY)\n    }\n\n    render() {\n        let className = 'reactist_time'\n        if (this.props.className) {\n            className = this.props.className\n        }\n\n        const timeComponent = this._renderTime(this.props.config)\n\n        return (\n            <time\n                className={className}\n                onMouseEnter={(event) => this._setHovered(true, event)}\n                onMouseLeave={(event) => this._setHovered(false, event)}\n            >\n                {this.props.tooltipOnHover ? (\n                    <Tooltip\n                        content={\n                            this.props.tooltip ||\n                            (this.props.time &&\n                                TimeUtils.formatTimeLong(this.props.time, this.props.config))\n                        }\n                    >\n                        <span>{timeComponent}</span>\n                    </Tooltip>\n                ) : (\n                    timeComponent\n                )}\n            </time>\n        )\n    }\n}\nTime.displayName = 'Time'\n\nTime.defaultProps = {\n    expandOnHover: false,\n    expandFullyOnHover: false,\n    tooltipOnHover: false,\n    refresh: true,\n    config: {\n        locale: 'en',\n        daysSuffix: 'd',\n        hoursSuffix: 'h',\n        minutesSuffix: 'm',\n        momentsAgo: 'moments ago',\n    },\n}\n\nexport { Time }\n"],"names":["Time","React","Component","constructor","props","super","this","refreshInterval","undefined","state","hovered","mouseX","mouseY","componentDidMount","refresh","_refresh","componentDidUpdate","prevProps","clearTimeout","componentWillUnmount","_setHovered","event","clientX","clientY","setState","_renderTime","config","time","expandFullyOnHover","tooltipOnHover","TimeUtils","formatTimeLong","expandOnHover","formatTime","timeAgo","setInterval","forceUpdate","render","className","timeComponent","createElement","onMouseEnter","onMouseLeave","Tooltip","content","tooltip","displayName","defaultProps","locale","daysSuffix","hoursSuffix","minutesSuffix","momentsAgo"],"mappings":"ybAiCA,MAAMA,UAAaC,EAAMC,UAIrBC,YAAYC,GACRC,MAAMD,GADcE,KAmCxBC,qBAnCwB,EAEpBD,KAAKC,qBAAkBC,EAEvBF,KAAKG,MAAQ,CACTC,SAAS,EACTC,YAAQH,EACRI,YAAQJ,GAIhBK,oBACQP,KAAKF,MAAMU,SACXR,KAAKS,WAIbC,mBAAmBC,IACVA,EAAUH,SAAWR,KAAKF,MAAMU,SACjCR,KAAKS,WAGLE,EAAUH,UAAYR,KAAKF,MAAMU,SAC7BR,KAAKC,iBACLW,aAAaZ,KAAKC,iBAK9BY,uBACQb,KAAKC,iBACLW,aAAaZ,KAAKC,iBAM1Ba,YAAYV,EAAkBW,GAC1B,MAAMV,OAAEA,EAAFC,OAAUA,GAAWN,KAAKG,OAC1Ba,QAAEA,EAAFC,QAAWA,GAAYF,EACzBC,IAAYX,GAAUY,IAAYX,GAElCN,KAAKkB,SAAS,KAAO,CACjBd,QAAAA,EACAC,OAAQW,EACRV,OAAQW,KAKpBE,YAAYC,GACR,GAAKpB,KAAKF,MAAMuB,KAAhB,CAGA,GAAIrB,KAAKG,MAAMC,QAAS,CACpB,GAAIJ,KAAKF,MAAMwB,qBAAuBtB,KAAKF,MAAMyB,eAC7C,OAAOC,EAAAA,UAAUC,eAAezB,KAAKF,MAAMuB,KAAMD,GAErD,GAAIpB,KAAKF,MAAM4B,gBAAkB1B,KAAKF,MAAMyB,eACxC,OAAOC,EAAAA,UAAUG,WAAW3B,KAAKF,MAAMuB,KAAMD,GAGrD,OAAOI,EAAAA,UAAUI,QAAQ5B,KAAKF,MAAMuB,KAAMD,IAG9CX,WACIT,KAAKC,gBAAkB4B,YAAY,KAC/B7B,KAAK8B,eAjGH,KAqGVC,SACI,IAAIC,EAAY,gBACZhC,KAAKF,MAAMkC,YACXA,EAAYhC,KAAKF,MAAMkC,WAG3B,MAAMC,EAAgBjC,KAAKmB,YAAYnB,KAAKF,MAAMsB,QAElD,OACIzB,EACIuC,cAAA,OAAA,CAAAF,UAAWA,EACXG,aAAepB,GAAUf,KAAKc,aAAY,EAAMC,GAChDqB,aAAerB,GAAUf,KAAKc,aAAY,EAAOC,IAEhDf,KAAKF,MAAMyB,eACR5B,EAAAuC,cAACG,EAAAA,QAAO,CACJC,QACItC,KAAKF,MAAMyC,SACVvC,KAAKF,MAAMuB,MACRG,EAASA,UAACC,eAAezB,KAAKF,MAAMuB,KAAMrB,KAAKF,MAAMsB,SAG7DzB,EAAAuC,cAAA,OAAA,KAAOD,IAGXA,IApGdvC,EACY8C,mBADZ9C,EAEY+C,oBAwGlB/C,EAAK8C,YAAc,OAEnB9C,EAAK+C,aAAe,CAChBf,eAAe,EACfJ,oBAAoB,EACpBC,gBAAgB,EAChBf,SAAS,EACTY,OAAQ,CACJsB,OAAQ,KACRC,WAAY,IACZC,YAAa,IACbC,cAAe,IACfC,WAAY"}