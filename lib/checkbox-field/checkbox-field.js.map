{"version":3,"file":"checkbox-field.js","sources":["../../src/checkbox-field/checkbox-field.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Box } from '../box'\nimport { Text } from '../text'\nimport { CheckboxIcon } from './checkbox-icon'\n\nimport styles from './checkbox-field.module.css'\nimport { useForkRef } from './use-fork-ref'\n\ninterface CheckboxFieldProps\n    extends Omit<\n        JSX.IntrinsicElements['input'],\n        | 'type'\n        | 'className'\n        | 'disabled'\n        | 'aria-controls'\n        | 'aria-describedby'\n        | 'aria-label'\n        | 'aria-labelledby'\n    > {\n    'aria-checked'?: never\n    /**\n     *\n     * Identifies the set of checkboxes controlled by the mixed checkbox for assistive technologies.\n     */\n    'aria-controls'?: string\n\n    /**\n     * Identifies the element (or elements) that describes the checkbox for assistive technologies.\n     */\n    'aria-describedby'?: string\n\n    /**\n     * Defines a string value that labels the current checkbox for assistive technologies.\n     */\n    'aria-label'?: string\n\n    /**\n     * Identifies the element (or elements) that labels the current checkbox for assistive technologies.\n     */\n    'aria-labelledby'?: string\n\n    /**\n     * Defines whether or not the checkbox is disabled.\n     */\n    disabled?: boolean\n\n    /**\n     * The label for the checkbox element.\n     */\n    label?: React.ReactNode\n\n    /**\n     * The icon that should be added to the checkbox label.\n     */\n    icon?: React.ReactElement | string | number\n\n    /**\n     * Defines whether or not the checkbox can be of a `mixed` state.\n     */\n    indeterminate?: boolean\n}\n\nconst CheckboxField = React.forwardRef<HTMLInputElement, CheckboxFieldProps>(function CheckboxField(\n    { label, icon, disabled, indeterminate, defaultChecked, onChange, ...props },\n    ref,\n) {\n    const isControlledComponent = typeof props.checked === 'boolean'\n    if (typeof indeterminate === 'boolean' && !isControlledComponent) {\n        // eslint-disable-next-line no-console\n        console.warn('Cannot use indeterminate on an uncontrolled checkbox')\n        indeterminate = undefined\n    }\n\n    if (!label && !props['aria-label'] && !props['aria-labelledby']) {\n        // eslint-disable-next-line no-console\n        console.warn('A Checkbox needs a label')\n    }\n\n    const [keyFocused, setKeyFocused] = React.useState(false)\n    const [checkedState, setChecked] = React.useState(props.checked ?? defaultChecked ?? false)\n    const isChecked = props.checked ?? checkedState\n\n    const internalRef = React.useRef<HTMLInputElement>(null)\n    const combinedRef = useForkRef(internalRef, ref)\n    React.useEffect(\n        function setIndeterminate() {\n            if (internalRef.current && typeof indeterminate === 'boolean') {\n                internalRef.current.indeterminate = indeterminate\n            }\n        },\n        [indeterminate],\n    )\n\n    return (\n        <Box\n            as=\"label\"\n            display=\"flex\"\n            alignItems=\"center\"\n            className={[\n                styles.container,\n                disabled ? styles.disabled : null,\n                isChecked ? styles.checked : null,\n                keyFocused ? styles.keyFocused : null,\n            ]}\n        >\n            <input\n                {...props}\n                ref={combinedRef}\n                type=\"checkbox\"\n                aria-checked={indeterminate ? 'mixed' : isChecked}\n                checked={isChecked}\n                disabled={disabled}\n                onChange={(event) => {\n                    onChange?.(event)\n                    if (!event.defaultPrevented) {\n                        setChecked(event.currentTarget.checked)\n                    }\n                }}\n                onBlur={(event) => {\n                    setKeyFocused(false)\n                    props?.onBlur?.(event)\n                }}\n                onKeyUp={(event) => {\n                    setKeyFocused(true)\n                    props?.onKeyUp?.(event)\n                }}\n            />\n            <CheckboxIcon\n                checked={isChecked}\n                disabled={disabled}\n                indeterminate={indeterminate}\n                aria-hidden\n            />\n            {icon ? (\n                <Box display=\"flex\" className={styles.icon} aria-hidden>\n                    {icon}\n                </Box>\n            ) : null}\n            {label ? (\n                <Box display=\"flex\" className={styles.label}>\n                    <Text>{label}</Text>\n                </Box>\n            ) : null}\n        </Box>\n    )\n})\n\nexport { CheckboxField }\nexport type { CheckboxFieldProps }\n"],"names":["React","forwardRef","ref","_ref2","_props$checked","_props$checked2","label","icon","disabled","indeterminate","defaultChecked","onChange","_ref","props","_objectWithoutProperties","objectWithoutProperties","_excluded","checked","console","warn","undefined","keyFocused","setKeyFocused","useState","checkedState","setChecked","isChecked","internalRef","useRef","combinedRef","useForkRef","useEffect","current","createElement","Box","as","display","alignItems","className","styles","container","type","aria-checked","event","defaultPrevented","currentTarget","onBlur","onKeyUp","CheckboxIcon","aria-hidden","Text"],"mappings":"qrBA8DsBA,EAAMC,YAAiD,SAEzEC,EAAAA,GAAG,IAAAC,EAAAC,EAAAC,EAAA,IADHC,MAAEA,EAAFC,KAASA,EAATC,SAAeA,EAAfC,cAAyBA,EAAzBC,eAAwCA,EAAxCC,SAAwDA,GACrDC,EADkEC,EAClEC,EAAAC,wBAAAH,EAAAI,GAG0B,kBAAlBP,GAD4C,kBAAlBI,EAAMI,UAGvCC,QAAQC,KAAK,wDACbV,OAAgBW,GAGfd,GAAUO,EAAM,eAAkBA,EAAM,oBAEzCK,QAAQC,KAAK,4BAGjB,MAAOE,EAAYC,GAAiBtB,EAAMuB,UAAS,IAC5CC,EAAcC,GAAczB,EAAMuB,SAAN,OAAeV,EAAf,OAAeA,EAAAA,EAAMI,SAArBb,EAAgCM,IAAhCP,GAC7BuB,SAAYb,EAAAA,EAAMI,WAAWO,EAE7BG,EAAc3B,EAAM4B,OAAyB,MAC7CC,EAAcC,EAAAA,WAAWH,EAAazB,GAU5C,OATAF,EAAM+B,WACF,WACQJ,EAAYK,SAAoC,kBAAlBvB,IAC9BkB,EAAYK,QAAQvB,cAAgBA,KAG5C,CAACA,IAIDT,EAACiC,cAAAC,MACG,CAAAC,GAAG,QACHC,QAAQ,OACRC,WAAW,SACXC,UAAW,CACPC,EAAAA,QAAOC,UACPhC,EAAW+B,EAAAA,QAAO/B,SAAW,KAC7BkB,EAAYa,EAAM,QAACtB,QAAU,KAC7BI,EAAakB,EAAM,QAAClB,WAAa,OAGrCrB,EAAAiC,cAAA,2CACQpB,GADR,GAAA,CAEIX,IAAK2B,EACLY,KAAK,WACSC,eAAAjC,EAAgB,QAAUiB,EACxCT,QAASS,EACTlB,SAAUA,EACVG,SAAWgC,IACP,MAAAhC,GAAAA,EAAWgC,GACNA,EAAMC,kBACPnB,EAAWkB,EAAME,cAAc5B,UAGvC6B,OAASH,IACLrB,GAAc,GACT,MAALT,SAAAA,EAAOiC,QAAPjC,EAAOiC,OAASH,IAEpBI,QAAUJ,IACNrB,GAAc,GACT,MAALT,SAAAA,EAAOkC,SAAPlC,EAAOkC,QAAUJ,OAGzB3C,EAAAiC,cAACe,eAAY,CACT/B,QAASS,EACTlB,SAAUA,EACVC,cAAeA,EAEjBwC,eAAA,IACD1C,EACGP,gBAACkC,EAAAA,IAAG,CAACE,QAAQ,OAAOE,UAAWC,EAAM,QAAChC,KACjC0C,eAAA,GAAA1C,GAEL,KACHD,EACGN,gBAACkC,MAAG,CAACE,QAAQ,OAAOE,UAAWC,EAAM,QAACjC,OAClCN,EAAAiC,cAACiB,EAADA,KAAK,KAAE5C,IAEX"}