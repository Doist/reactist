{"version":3,"file":"static-toast.js","sources":["../../src/toast/static-toast.tsx"],"sourcesContent":["import React from 'react'\n\nimport { CloseIcon } from '../icons/close-icon'\nimport { Box } from '../box'\nimport { IconButton, Button } from '../button'\nimport { Stack } from '../stack'\nimport { Text } from '../text'\n\nimport styles from './toast.module.css'\n\ntype ToastActionObject = {\n    label: string\n    onClick: () => void\n}\n\ntype StaticToastProps = {\n    /**\n     * The message shown in the toast.\n     */\n    message: NonNullable<React.ReactNode>\n\n    /**\n     * An optional extra description that complements the main message shown in the toast.\n     */\n    description?: React.ReactNode\n\n    /**\n     * An icon to be shown in front of the message.\n     */\n    icon?: React.ReactNode\n\n    /**\n     * The action to call when the user clicks on the dismiss button. If omitted, the dismiss button\n     * does not appear.\n     */\n    onDismiss?: () => void\n\n    /**\n     * The label for the button that dismisses the toast.\n     */\n    dismissLabel?: string\n\n    /**\n     * What to render in the action slot. Usually a button or link.\n     *\n     * You can also pass an object that containst the action label, and a function that performs the\n     * action. This is used by the toast component to render a button for you.\n     *\n     * In general, you should prefer the action object most of the time. But it is possible to pass\n     * a React element instead, if you need more control over what to render. For instance, you may\n     * want to render a link instead of a button.\n     *\n     * Keep in mind, though, that the default button rendered uses `variant=\"tertiary\"` and\n     * `size=\"small\"`. In most cases you should stick to the variants `tertiary` or `primary`, which\n     * are the ones that look better in the toast's dark background. And in all cases you should use\n     * size `small`.\n     */\n    action?: React.ReactElement | ToastActionObject\n}\n\n/**\n * A toast that shows a message, and an optional action associated with it.\n *\n * This component is generally not meant to be used directly. Most of the time you'll want to use\n * toasts generated via `useToasts` instead. However, this component is available in case you need\n * to take control of rendering a toast under different circumstances than that of notification-like\n * floating toasts.\n *\n * This component makes no assumptions outwardly about how it is positioned on the screen. That is,\n * it will not be shown floating or fixed to the viewport edges, as toasts normally show up. It only\n * provides the toast look and feel, but you are responsible for positioning it as you want.\n *\n * @see useToasts\n */\nconst StaticToast = React.forwardRef<HTMLDivElement, StaticToastProps>(function Toast(\n    { message, description, icon, action, onDismiss, dismissLabel = 'Close', ...props },\n    ref,\n) {\n    return (\n        <Box\n            ref={ref}\n            role=\"alert\"\n            aria-live=\"polite\"\n            borderRadius=\"full\"\n            width=\"fitContent\"\n            background=\"toast\"\n            display=\"flex\"\n            padding=\"large\"\n            alignItems=\"center\"\n            className={styles.toastContainer}\n            {...props}\n        >\n            {icon ? <ToastContentSlot>{icon}</ToastContentSlot> : null}\n\n            <Box flexGrow={1} maxWidth=\"small\">\n                {description ? (\n                    <Stack space=\"small\">\n                        <Text weight=\"bold\">{message} </Text>\n                        <Text>{description}</Text>\n                    </Stack>\n                ) : (\n                    <Text>{message}</Text>\n                )}\n            </Box>\n\n            {action ? (\n                <ToastContentSlot>\n                    {isActionObject(action) ? (\n                        <Button variant=\"tertiary\" size=\"small\" onClick={action.onClick}>\n                            {action.label}\n                        </Button>\n                    ) : (\n                        action\n                    )}\n                </ToastContentSlot>\n            ) : null}\n\n            {onDismiss ? (\n                <ToastContentSlot>\n                    <IconButton\n                        variant=\"quaternary\"\n                        size=\"small\"\n                        onClick={onDismiss}\n                        aria-label={dismissLabel}\n                        icon={<CloseIcon />}\n                    />\n                </ToastContentSlot>\n            ) : null}\n        </Box>\n    )\n})\n\nfunction isActionObject(action: StaticToastProps['action']): action is ToastActionObject {\n    return (\n        action != null &&\n        typeof action === 'object' &&\n        'label' in action &&\n        'onClick' in action &&\n        typeof action.label === 'string' &&\n        typeof action.onClick === 'function'\n    )\n}\n\nfunction ToastContentSlot({ children }: { children: React.ReactNode }) {\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            marginX=\"-xsmall\"\n            marginY=\"-medium\"\n            className={styles.slot}\n        >\n            {children}\n        </Box>\n    )\n}\n\nexport { StaticToast, isActionObject }\nexport type { StaticToastProps }\n"],"names":["isActionObject","action","label","onClick","ToastContentSlot","children","React","createElement","Box","display","alignItems","justifyContent","marginX","marginY","className","styles","slot","forwardRef","ref","message","description","icon","onDismiss","dismissLabel","_ref","props","_objectWithoutProperties","objectWithoutProperties","_excluded","_objectSpread","role","aria-live","borderRadius","width","background","padding","toastContainer","flexGrow","maxWidth","Stack","space","Text","weight","Button","variant","size","IconButton","aria-label","CloseIcon"],"mappings":"gfAoIA,SAASA,EAAeC,GACpB,OACc,MAAVA,GACkB,iBAAXA,GACP,UAAWA,GACX,YAAaA,GACW,iBAAjBA,EAAOC,OACY,mBAAnBD,EAAOE,QAItB,SAASC,GAAiBC,SAAEA,IACxB,OACIC,EAAA,QAAAC,cAACC,MAAG,CACAC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,QAAQ,UACRC,QAAQ,UACRC,UAAWC,EAAM,QAACC,MAEjBX,uBA/EOC,EAAK,QAACW,YAA6C,SAEnEC,EAAAA,GAAG,IADHC,QAAEA,EAAFC,YAAWA,EAAXC,KAAwBA,EAAxBpB,OAA8BA,EAA9BqB,UAAsCA,EAAtCC,aAAiDA,EAAe,SAC7DC,EADyEC,EACzEC,EAAAC,wBAAAH,EAAAI,GAEH,OACItB,wBAACE,EAADA,IAAAqB,gBAAA,CACIX,IAAKA,EACLY,KAAK,QACKC,YAAA,SACVC,aAAa,OACbC,MAAM,aACNC,WAAW,QACXzB,QAAQ,OACR0B,QAAQ,QACRzB,WAAW,SACXI,UAAWC,EAAM,QAACqB,gBACdX,GAEHJ,EAAOf,EAAC,QAAAC,cAAAH,EAAkB,KAAAiB,GAA2B,KAEtDf,UAACC,cAAAC,EAAAA,KAAI6B,SAAU,EAAGC,SAAS,SACtBlB,EACGd,EAAAA,QAAAC,cAACgC,QAAM,CAAAC,MAAM,SACTlC,EAAA,QAAAC,cAACkC,OAAI,CAACC,OAAO,QAAQvB,EAAgB,KACrCb,EAAAA,QAAAC,cAACkC,EAAAA,KAAM,KAAArB,IAGXd,wBAACmC,EAAAA,KAAI,KAAEtB,IAIdlB,EACGK,wBAACF,EAAgB,KACZJ,EAAeC,GACZK,UAACC,cAAAoC,EAAAA,QAAOC,QAAQ,WAAWC,KAAK,QAAQ1C,QAASF,EAAOE,SACnDF,EAAOC,OAGZD,GAGR,KAEHqB,EACGhB,wBAACF,EAAgB,KACbE,EAAAA,QAAAC,cAACuC,EAAAA,WAAU,CACPF,QAAQ,aACRC,KAAK,QACL1C,QAASmB,EACGyB,aAAAxB,EACZF,KAAMf,EAAA,QAAAC,cAACyC,EAAAA,UAAS,SAGxB"}