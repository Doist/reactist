{"version":3,"file":"checkbox-field.js","sources":["../../src/checkbox-field/checkbox-field.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Box } from '../box'\nimport { Text } from '../text'\nimport { CheckboxIcon } from './checkbox-icon'\n\nimport styles from './checkbox-field.module.css'\nimport { useForkRef } from './use-fork-ref'\n\ninterface CheckboxFieldProps\n    extends Omit<\n        JSX.IntrinsicElements['input'],\n        | 'type'\n        | 'className'\n        | 'disabled'\n        | 'aria-controls'\n        | 'aria-describedby'\n        | 'aria-label'\n        | 'aria-labelledby'\n    > {\n    'aria-checked'?: never\n    /**\n     *\n     * Identifies the set of checkboxes controlled by the mixed checkbox for assistive technologies.\n     */\n    'aria-controls'?: string\n\n    /**\n     * Identifies the element (or elements) that describes the checkbox for assistive technologies.\n     */\n    'aria-describedby'?: string\n\n    /**\n     * Defines a string value that labels the current checkbox for assistive technologies.\n     */\n    'aria-label'?: string\n\n    /**\n     * Identifies the element (or elements) that labels the current checkbox for assistive technologies.\n     */\n    'aria-labelledby'?: string\n\n    /**\n     * Defines whether or not the checkbox is disabled.\n     */\n    disabled?: boolean\n\n    /**\n     * The label for the checkbox element.\n     */\n    label?: React.ReactNode\n\n    /**\n     * The icon that should be added to the checkbox label.\n     */\n    icon?: React.ReactElement | string | number\n\n    /**\n     * Defines whether or not the checkbox can be of a `mixed` state.\n     */\n    indeterminate?: boolean\n}\n\nconst CheckboxField = React.forwardRef<HTMLInputElement, CheckboxFieldProps>(function CheckboxField(\n    { label, icon, disabled, indeterminate, defaultChecked, onChange, ...props },\n    ref,\n) {\n    const isControlledComponent = typeof props.checked === 'boolean'\n    if (typeof indeterminate === 'boolean' && !isControlledComponent) {\n        // eslint-disable-next-line no-console\n        console.warn('Cannot use indeterminate on an uncontrolled checkbox')\n        indeterminate = undefined\n    }\n\n    if (!label && !props['aria-label'] && !props['aria-labelledby']) {\n        // eslint-disable-next-line no-console\n        console.warn('A Checkbox needs a label')\n    }\n\n    const [keyFocused, setKeyFocused] = React.useState(false)\n    const [checkedState, setChecked] = React.useState(props.checked ?? defaultChecked ?? false)\n    const isChecked = props.checked ?? checkedState\n\n    const internalRef = React.useRef<HTMLInputElement>(null)\n    const combinedRef = useForkRef(internalRef, ref)\n    React.useEffect(\n        function setIndeterminate() {\n            if (internalRef.current && typeof indeterminate === 'boolean') {\n                internalRef.current.indeterminate = indeterminate\n            }\n        },\n        [indeterminate],\n    )\n\n    return (\n        <Box\n            as=\"label\"\n            display=\"flex\"\n            alignItems=\"center\"\n            className={[\n                styles.container,\n                disabled ? styles.disabled : null,\n                isChecked ? styles.checked : null,\n                keyFocused ? styles.keyFocused : null,\n            ]}\n        >\n            <input\n                {...props}\n                ref={combinedRef}\n                type=\"checkbox\"\n                aria-checked={indeterminate ? 'mixed' : isChecked}\n                checked={isChecked}\n                disabled={disabled}\n                onChange={(event) => {\n                    onChange?.(event)\n                    if (!event.defaultPrevented) {\n                        setChecked(event.currentTarget.checked)\n                    }\n                }}\n                onBlur={(event) => {\n                    setKeyFocused(false)\n                    props?.onBlur?.(event)\n                }}\n                onKeyUp={(event) => {\n                    setKeyFocused(true)\n                    props?.onKeyUp?.(event)\n                }}\n            />\n            <CheckboxIcon\n                checked={isChecked}\n                disabled={disabled}\n                indeterminate={indeterminate}\n                aria-hidden\n            />\n            {icon ? (\n                <Box display=\"flex\" className={styles.icon} aria-hidden>\n                    {icon}\n                </Box>\n            ) : null}\n            {label ? (\n                <Box display=\"flex\" className={styles.label}>\n                    <Text>{label}</Text>\n                </Box>\n            ) : null}\n        </Box>\n    )\n})\n\nexport { CheckboxField }\nexport type { CheckboxFieldProps }\n"],"names":["CheckboxField","React","forwardRef","ref","label","icon","disabled","indeterminate","defaultChecked","onChange","props","isControlledComponent","checked","console","warn","undefined","keyFocused","setKeyFocused","useState","checkedState","setChecked","isChecked","internalRef","useRef","combinedRef","useForkRef","useEffect","setIndeterminate","current","createElement","Box","as","display","alignItems","className","styles","container","type","event","defaultPrevented","currentTarget","onBlur","onKeyUp","CheckboxIcon","Text"],"mappings":"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"}