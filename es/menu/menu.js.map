{"version":3,"file":"menu.js","sources":["../../src/menu/menu.tsx"],"sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\n\nimport {\n    Portal,\n    MenuStore,\n    MenuStoreProps,\n    useMenuStore,\n    MenuProps as AriakitMenuProps,\n    Menu as AriakitMenu,\n    MenuGroup as AriakitMenuGroup,\n    MenuItem as AriakitMenuItem,\n    MenuItemProps as AriakitMenuItemProps,\n    MenuButton as AriakitMenuButton,\n    MenuButtonProps as AriakitMenuButtonProps,\n    Role,\n    RoleProps,\n} from '@ariakit/react'\n\nimport './menu.less'\nimport type { ObfuscatedClassName } from '../utils/common-types'\n\ntype MenuContextState = {\n    menuStore: MenuStore | null\n    handleItemSelect?: (value: string | null | undefined) => void\n    getAnchorRect: (() => { x: number; y: number }) | null\n    setAnchorRect: (rect: { x: number; y: number } | null) => void\n}\n\nconst MenuContext = React.createContext<MenuContextState>({\n    menuStore: null,\n    handleItemSelect: () => undefined,\n    getAnchorRect: null,\n    setAnchorRect: () => undefined,\n})\n\n//\n// Menu\n//\n\ninterface MenuProps extends Omit<MenuStoreProps, 'visible'> {\n    /**\n     * The `Menu` must contain a `MenuList` that defines the menu options. It must also contain a\n     * `MenuButton` that triggers the menu to be opened or closed.\n     */\n    children: React.ReactNode\n\n    /**\n     * An optional callback that will be called back whenever a menu item is selected. It receives\n     * the `value` of the selected `MenuItem`.\n     *\n     * If you pass down this callback, it is recommended that you properly memoize it so it does not\n     * change on every render.\n     */\n    onItemSelect?: (value: string | null | undefined) => void\n}\n\n/**\n * Wrapper component to control a menu. It does not render anything, only providing the state\n * management for the menu components inside it.\n */\nfunction Menu({ children, onItemSelect, ...props }: MenuProps) {\n    const [anchorRect, setAnchorRect] = React.useState<{ x: number; y: number } | null>(null)\n    const getAnchorRect = React.useMemo(() => (anchorRect ? () => anchorRect : null), [anchorRect])\n    const menuStore = useMenuStore({ focusLoop: true, ...props })\n\n    const value: MenuContextState = React.useMemo(\n        () => ({ menuStore, handleItemSelect: onItemSelect, getAnchorRect, setAnchorRect }),\n        [menuStore, onItemSelect, getAnchorRect, setAnchorRect],\n    )\n\n    return <MenuContext.Provider value={value}>{children}</MenuContext.Provider>\n}\n\n//\n// MenuButton\n//\n\ninterface MenuButtonProps\n    extends Omit<AriakitMenuButtonProps, 'store' | 'className' | 'as'>,\n        ObfuscatedClassName {}\n\n/**\n * A button to toggle a dropdown menu open or closed.\n */\nconst MenuButton = React.forwardRef<HTMLButtonElement, MenuButtonProps>(function MenuButton(\n    { exceptionallySetClassName, ...props },\n    ref,\n) {\n    const { menuStore } = React.useContext(MenuContext)\n    if (!menuStore) {\n        throw new Error('MenuButton must be wrapped in <Menu/>')\n    }\n    return (\n        <AriakitMenuButton\n            {...props}\n            store={menuStore}\n            ref={ref}\n            className={classNames('reactist_menubutton', exceptionallySetClassName)}\n        />\n    )\n})\n\n//\n// ContextMenuTrigger\n//\n\ninterface ContextMenuTriggerProps\n    extends ObfuscatedClassName,\n        React.HTMLAttributes<HTMLDivElement>,\n        Pick<RoleProps, 'render'> {}\n\nconst ContextMenuTrigger = React.forwardRef<HTMLDivElement, ContextMenuTriggerProps>(\n    function ContextMenuTrigger({ render, ...props }, ref) {\n        const { setAnchorRect, menuStore } = React.useContext(MenuContext)\n        if (!menuStore) {\n            throw new Error('ContextMenuTrigger must be wrapped in <Menu/>')\n        }\n\n        const handleContextMenu = React.useCallback(\n            function handleContextMenu(event: React.MouseEvent) {\n                event.preventDefault()\n                setAnchorRect({ x: event.clientX, y: event.clientY })\n                menuStore.show()\n            },\n            [setAnchorRect, menuStore],\n        )\n\n        const isOpen = menuStore.useState('open')\n        React.useEffect(() => {\n            if (!isOpen) setAnchorRect(null)\n        }, [isOpen, setAnchorRect])\n\n        return <Role.div {...props} onContextMenu={handleContextMenu} ref={ref} render={render} />\n    },\n)\n\n//\n// MenuList\n//\n\ninterface MenuListProps\n    extends Omit<AriakitMenuProps, 'store' | 'className'>,\n        ObfuscatedClassName {}\n\n/**\n * The dropdown menu itself, containing a list of menu items.\n */\nconst MenuList = React.forwardRef<HTMLDivElement, MenuListProps>(function MenuList(\n    { exceptionallySetClassName, modal = true, ...props },\n    ref,\n) {\n    const { menuStore, getAnchorRect } = React.useContext(MenuContext)\n    if (!menuStore) {\n        throw new Error('MenuList must be wrapped in <Menu/>')\n    }\n\n    const isOpen = menuStore.useState('open')\n\n    return isOpen ? (\n        <Portal preserveTabOrder>\n            <AriakitMenu\n                {...props}\n                store={menuStore}\n                gutter={8}\n                shift={4}\n                ref={ref}\n                className={classNames('reactist_menulist', exceptionallySetClassName)}\n                getAnchorRect={getAnchorRect ?? undefined}\n                modal={modal}\n            />\n        </Portal>\n    ) : null\n})\n\n//\n// MenuItem\n//\n\ninterface MenuItemProps extends AriakitMenuItemProps, ObfuscatedClassName {\n    /**\n     * An optional value given to this menu item. It is passed on to the parent `Menu`'s\n     * `onItemSelect` when you provide that instead of (or alongside) providing individual\n     * `onSelect` callbacks to each menu item.\n     */\n    value?: string\n\n    /**\n     * When `true` the menu item is disabled and won't be selectable or be part of the keyboard\n     * navigation across the menu options.\n     *\n     * @default true\n     */\n    disabled?: boolean\n\n    /**\n     * When `true` the menu will close when the menu item is selected, in addition to performing the\n     * action that the menu item is set out to do.\n     *\n     * Set this to `false` to make sure that a given menu item does not auto-closes the menu when\n     * selected. This should be the exception and not the norm, as the default is to auto-close.\n     *\n     * @default true\n     */\n    hideOnSelect?: boolean\n\n    /**\n     * The action to perform when the menu item is selected.\n     *\n     * If you return `false` from this function, the menu will not auto-close when this menu item\n     * is selected. Though you should use `hideOnSelect` for this purpose, this allows you to\n     * achieve the same effect conditionally and dynamically deciding at run time.\n     */\n    onSelect?: () => unknown\n\n    /**\n     * The event handler called when the menu item is clicked.\n     *\n     * This is similar to `onSelect`, but a bit different. You can certainly use it to trigger the\n     * action that the menu item represents. But in general you should prefer `onSelect` for that.\n     *\n     * The main use for this handler is to get access to the click event. This can be used, for\n     * example, to call `event.preventDefault()`, which will effectively prevent the rest of the\n     * consequences of the click, including preventing `onSelect` from being called. In particular,\n     * this is useful in menu items that are links, and you want the click to not trigger navigation\n     * under some circumstances.\n     */\n    onClick?: (event: React.MouseEvent) => void\n}\n\n/**\n * A menu item inside a menu list. It can be selected by the user, triggering the `onSelect`\n * callback.\n */\nconst MenuItem = React.forwardRef<HTMLDivElement, MenuItemProps>(function MenuItem(\n    {\n        value,\n        children,\n        onSelect,\n        hideOnSelect = true,\n        onClick,\n        exceptionallySetClassName,\n        ...props\n    },\n    ref,\n) {\n    const { handleItemSelect, menuStore } = React.useContext(MenuContext)\n    if (!menuStore) {\n        throw new Error('MenuItem must be wrapped in <Menu/>')\n    }\n\n    const { hide } = menuStore\n    const handleClick = React.useCallback(\n        function handleClick(event: React.MouseEvent) {\n            onClick?.(event)\n            const onSelectResult: unknown =\n                onSelect && !event.defaultPrevented ? onSelect() : undefined\n            const shouldClose = onSelectResult !== false && hideOnSelect\n            handleItemSelect?.(value)\n            if (shouldClose) hide()\n        },\n        [onSelect, onClick, handleItemSelect, hideOnSelect, hide, value],\n    )\n\n    return (\n        <AriakitMenuItem\n            {...props}\n            store={menuStore}\n            ref={ref}\n            onClick={handleClick}\n            className={exceptionallySetClassName}\n            hideOnClick={false}\n        >\n            {children}\n        </AriakitMenuItem>\n    )\n})\n\n//\n// SubMenu\n//\n\ntype SubMenuProps = Pick<MenuProps, 'children' | 'onItemSelect'>\n\n/**\n * This component can be rendered alongside other `MenuItem` inside a `MenuList` in order to have\n * a sub-menu.\n *\n * Its children are expected to have the structure of a first level menu (a `MenuButton` and a\n * `MenuList`).\n *\n * ```jsx\n * <MenuItem label=\"Edit profile\" />\n * <SubMenu>\n *   <MenuButton>More options</MenuButton>\n *   <MenuList>\n *     <MenuItem label=\"Preferences\" />\n *     <MenuItem label=\"Sign out\" />\n *   </MenuList>\n * </SubMenu>\n * ```\n *\n * The `MenuButton` will become a menu item in the current menu items list, and it will lead to\n * opening a sub-menu with the menu items list below it.\n */\nconst SubMenu = React.forwardRef<HTMLDivElement, SubMenuProps>(function SubMenu(\n    { children, onItemSelect },\n    ref,\n) {\n    const { handleItemSelect: parentMenuItemSelect, menuStore } = React.useContext(MenuContext)\n    if (!menuStore) {\n        throw new Error('SubMenu must be wrapped in <Menu/>')\n    }\n\n    const { hide: parentMenuHide } = menuStore\n    const handleSubItemSelect = React.useCallback(\n        function handleSubItemSelect(value: string | null | undefined) {\n            onItemSelect?.(value)\n            parentMenuItemSelect?.(value)\n            parentMenuHide()\n        },\n        [parentMenuHide, parentMenuItemSelect, onItemSelect],\n    )\n\n    const [button, list] = React.Children.toArray(children)\n    const buttonElement = button as React.ReactElement<MenuButtonProps>\n\n    return (\n        <Menu onItemSelect={handleSubItemSelect}>\n            <AriakitMenuItem store={menuStore} ref={ref} hideOnClick={false} render={buttonElement}>\n                {buttonElement.props.children}\n            </AriakitMenuItem>\n            {list}\n        </Menu>\n    )\n})\n\n//\n// MenuGroup\n//\n\ninterface MenuGroupProps\n    extends Omit<React.HTMLAttributes<HTMLDivElement>, 'className'>,\n        ObfuscatedClassName {\n    /**\n     * A label to be shown visually and also used to semantically label the group.\n     */\n    label: string\n}\n\n/**\n * A way to semantically group some menu items.\n *\n * This group does not add any visual separator. You can do that yourself adding `<hr />` elements\n * before and/or after the group if you so wish.\n */\nconst MenuGroup = React.forwardRef<HTMLDivElement, MenuGroupProps>(function MenuGroup(\n    { label, children, exceptionallySetClassName, ...props },\n    ref,\n) {\n    const { menuStore } = React.useContext(MenuContext)\n    if (!menuStore) {\n        throw new Error('MenuGroup must be wrapped in <Menu/>')\n    }\n\n    return (\n        <AriakitMenuGroup\n            {...props}\n            ref={ref}\n            store={menuStore}\n            className={exceptionallySetClassName}\n        >\n            {label ? (\n                <div role=\"presentation\" className=\"reactist_menugroup__label\">\n                    {label}\n                </div>\n            ) : null}\n            {children}\n        </AriakitMenuGroup>\n    )\n})\n\nexport { ContextMenuTrigger, Menu, MenuButton, MenuList, MenuItem, SubMenu, MenuGroup }\nexport type { MenuButtonProps, MenuListProps, MenuItemProps, MenuGroupProps }\n"],"names":["MenuContext","React","createContext","menuStore","handleItemSelect","undefined","getAnchorRect","setAnchorRect","Menu","children","onItemSelect","props","anchorRect","useState","useMemo","useMenuStore","_objectSpread","focusLoop","value","createElement","Provider","MenuButton","forwardRef","ref","exceptionallySetClassName","useContext","Error","AriakitMenuButton","store","className","classNames","ContextMenuTrigger","render","handleContextMenu","useCallback","event","preventDefault","x","clientX","y","clientY","show","isOpen","useEffect","Role","div","onContextMenu","MenuList","modal","Portal","preserveTabOrder","AriakitMenu","gutter","shift","MenuItem","onSelect","hideOnSelect","onClick","hide","handleClick","onSelectResult","defaultPrevented","shouldClose","AriakitMenuItem","hideOnClick","SubMenu","parentMenuItemSelect","parentMenuHide","handleSubItemSelect","button","list","Children","toArray","buttonElement","MenuGroup","label","AriakitMenuGroup","role"],"mappings":"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"}