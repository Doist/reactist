{"version":3,"file":"static-toast.js","sources":["../../src/toast/static-toast.tsx"],"sourcesContent":["import React from 'react'\n\nimport { CloseIcon } from '../icons/close-icon'\nimport { Box } from '../box'\nimport { IconButton, Button } from '../button'\nimport { Stack } from '../stack'\nimport { Text } from '../text'\n\nimport styles from './toast.module.css'\n\ntype ToastActionObject = {\n    label: string\n    onClick: () => void\n}\n\ntype StaticToastProps = {\n    /**\n     * The message shown in the toast.\n     */\n    message: NonNullable<React.ReactNode>\n\n    /**\n     * An optional extra description that complements the main message shown in the toast.\n     */\n    description?: React.ReactNode\n\n    /**\n     * An icon to be shown in front of the message.\n     */\n    icon?: React.ReactNode\n\n    /**\n     * The action to call when the user clicks on the dismiss button. If omitted, the dismiss button\n     * does not appear.\n     */\n    onDismiss?: () => void\n\n    /**\n     * The label for the button that dismisses the toast.\n     */\n    dismissLabel?: string\n\n    /**\n     * What to render in the action slot. Usually a button or link.\n     *\n     * You can also pass an object that containst the action label, and a function that performs the\n     * action. This is used by the toast component to render a button for you.\n     *\n     * In general, you should prefer the action object most of the time. But it is possible to pass\n     * a React element instead, if you need more control over what to render. For instance, you may\n     * want to render a link instead of a button.\n     *\n     * Keep in mind, though, that the default button rendered uses `variant=\"tertiary\"` and\n     * `size=\"small\"`. In most cases you should stick to the variants `tertiary` or `primary`, which\n     * are the ones that look better in the toast's dark background. And in all cases you should use\n     * size `small`.\n     */\n    action?: React.ReactElement | ToastActionObject\n}\n\n/**\n * A toast that shows a message, and an optional action associated with it.\n *\n * This component is generally not meant to be used directly. Most of the time you'll want to use\n * toasts generated via `useToasts` instead. However, this component is available in case you need\n * to take control of rendering a toast under different circumstances than that of notification-like\n * floating toasts.\n *\n * This component makes no assumptions outwardly about how it is positioned on the screen. That is,\n * it will not be shown floating or fixed to the viewport edges, as toasts normally show up. It only\n * provides the toast look and feel, but you are responsible for positioning it as you want.\n *\n * @see useToasts\n */\nconst StaticToast = React.forwardRef<HTMLDivElement, StaticToastProps>(function Toast(\n    { message, description, icon, action, onDismiss, dismissLabel = 'Close', ...props },\n    ref,\n) {\n    return (\n        <Box\n            ref={ref}\n            role=\"alert\"\n            aria-live=\"polite\"\n            borderRadius=\"full\"\n            width=\"fitContent\"\n            background=\"toast\"\n            display=\"flex\"\n            padding=\"large\"\n            alignItems=\"center\"\n            className={styles.toastContainer}\n            {...props}\n        >\n            {icon ? <ToastContentSlot>{icon}</ToastContentSlot> : null}\n\n            <Box flexGrow={1} maxWidth=\"small\">\n                {description ? (\n                    <Stack space=\"small\">\n                        <Text weight=\"bold\">{message} </Text>\n                        <Text>{description}</Text>\n                    </Stack>\n                ) : (\n                    <Text>{message}</Text>\n                )}\n            </Box>\n\n            {action ? (\n                <ToastContentSlot>\n                    {isActionObject(action) ? (\n                        <Button variant=\"tertiary\" size=\"small\" onClick={action.onClick}>\n                            {action.label}\n                        </Button>\n                    ) : (\n                        action\n                    )}\n                </ToastContentSlot>\n            ) : null}\n\n            {onDismiss ? (\n                <ToastContentSlot>\n                    <IconButton\n                        variant=\"quaternary\"\n                        size=\"small\"\n                        onClick={onDismiss}\n                        aria-label={dismissLabel}\n                        icon={<CloseIcon />}\n                    />\n                </ToastContentSlot>\n            ) : null}\n        </Box>\n    )\n})\n\nfunction isActionObject(action: StaticToastProps['action']): action is ToastActionObject {\n    return (\n        action != null &&\n        typeof action === 'object' &&\n        'label' in action &&\n        'onClick' in action &&\n        typeof action.label === 'string' &&\n        typeof action.onClick === 'function'\n    )\n}\n\nfunction ToastContentSlot({ children }: { children: React.ReactNode }) {\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            marginX=\"-xsmall\"\n            marginY=\"-medium\"\n            className={styles.slot}\n        >\n            {children}\n        </Box>\n    )\n}\n\nexport { StaticToast, isActionObject }\nexport type { StaticToastProps }\n"],"names":["StaticToast","React","forwardRef","Toast","ref","message","description","icon","action","onDismiss","dismissLabel","props","Box","_objectSpread","role","borderRadius","width","background","display","padding","alignItems","className","styles","toastContainer","createElement","ToastContentSlot","flexGrow","maxWidth","Stack","space","Text","weight","isActionObject","Button","variant","size","onClick","label","IconButton","CloseIcon","children","justifyContent","marginX","marginY","slot"],"mappings":"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"}