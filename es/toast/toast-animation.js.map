{"version":3,"file":"toast-animation.js","sources":["../../src/toast/toast-animation.ts"],"sourcesContent":["/**\n * Adapted with minor changes from https://github.com/seek-oss/braid-design-system/blob/7a5ebccb/packages/braid-design-system/lib/components/useToast/useFlipList.ts\n *\n * MIT License\n *\n * Copyright (c) 2018 SEEK\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { useMemo, useCallback, useLayoutEffect } from 'react'\n\nconst ANIMATION_TIMEOUT = 400\nconst ENTRANCE_TRANSITION = 'transform 0.3s ease, opacity 0.3s ease'\nconst EXIT_TRANSITION = 'opacity 0.2s ease'\n\ntype Transform = {\n    property: 'opacity' | 'transform' | 'scale'\n    from?: string\n    to?: string\n}\n\n/**\n * Applies the \"from\" value of given CSS properties, and also sets a transition CSS property. Then\n * it waits an animation frame before setting the same CSS properties to the target \"to\" value. This\n * triggers the browser to perform the CSS transition on them.\n *\n * At the end of the animation, it cleans up, unsetting all the CSS properties (including the\n * transition), and calls the \"done\" callback, if given.\n */\nfunction animate({\n    element,\n    transforms,\n    transition,\n    done,\n}: {\n    element: HTMLElement\n    transforms: Transform[]\n    transition: string\n    done?: () => void\n}) {\n    const fallbackTimeout = setTimeout(() => {\n        done?.()\n    }, ANIMATION_TIMEOUT)\n\n    transforms.forEach(({ property, from = '' }) => {\n        element.style.setProperty(property, from)\n    })\n    element.style.setProperty('transition', '')\n\n    function transitionEndHandler(event: TransitionEvent) {\n        if (event.target !== element) {\n            return\n        }\n        element.style.setProperty('transition', '')\n        done?.()\n        element.removeEventListener('transitionend', transitionEndHandler)\n        clearTimeout(fallbackTimeout)\n    }\n\n    element.addEventListener('transitionend', transitionEndHandler)\n\n    // Call requestAnimationFrame twice to make sure we have a full animation frame at our disposal\n    window.requestAnimationFrame(() => {\n        window.requestAnimationFrame(() => {\n            element.style.setProperty('transition', transition)\n            transforms.forEach(({ property, to = '' }) => {\n                element.style.setProperty(property, to)\n            })\n        })\n    })\n}\n\ntype ToastsAnimationToolkit = {\n    /**\n     * Used for gathering all the active stacked toast elements. Should be used by passing\n     * `ref={mappedRef(toastId)}` to the stacked toasts.\n     */\n    mappedRef: (toastId: string) => (ref: HTMLElement | null) => void\n\n    /**\n     * The stacked toasts view should use this callback when it needs to remove a toast, instead of\n     * removing it right away. The actual removal from the state (and consequently, from the DOM)\n     * should happen in the `onAnimationDone` instead.\n     */\n    animateRemove: (toastId: string, onAnimationDone: () => void) => void\n}\n\n/**\n * Provides the functionality of animating the stacked toasts when they appear and before they\n * disappear.\n *\n * It works by keeping a mapping from toast IDs to the toast elements, and keeping a mapping from\n * toast IDs to their top position. Then, on every single re-render, it compares the new DOM\n * situation with the previously stored one in these mappings. With this information, it applies\n * animations that smoothly transitions between both states.\n */\nfunction useToastsAnimation(): ToastsAnimationToolkit {\n    const refs = useMemo(() => new Map<string, HTMLElement | null>(), [])\n    const positions = useMemo(() => new Map<string, number>(), [])\n\n    useLayoutEffect(() => {\n        const animations: Array<{\n            element: HTMLElement\n            transforms: Transform[]\n            transition: string\n        }> = []\n\n        Array.from(refs.entries()).forEach(([id, element]) => {\n            if (!element) {\n                refs.delete(id)\n                return\n            }\n\n            const prevTop = positions.get(id)\n            const { top, height } = element.getBoundingClientRect()\n\n            if (typeof prevTop === 'number' && prevTop !== top) {\n                // Move animation\n                animations.push({\n                    element,\n                    transition: ENTRANCE_TRANSITION,\n                    transforms: [{ property: 'transform', from: `translateY(${prevTop - top}px)` }],\n                })\n            } else if (typeof prevTop !== 'number') {\n                // Enter animation\n                animations.push({\n                    element,\n                    transition: ENTRANCE_TRANSITION,\n                    transforms: [\n                        { property: 'transform', from: `translateY(${height}px)` },\n                        { property: 'opacity', from: '0' },\n                    ],\n                })\n            }\n\n            positions.set(id, element.getBoundingClientRect().top)\n        })\n\n        animations.forEach(({ element, transforms, transition }) => {\n            animate({ element, transforms, transition })\n        })\n    })\n\n    const animateRemove = useCallback(\n        function animateRemove(id: string, onAnimationDone: () => void) {\n            const element = refs.get(id)\n            if (element) {\n                // Removal animation\n                animate({\n                    element,\n                    transforms: [{ property: 'opacity', to: '0' }],\n                    transition: EXIT_TRANSITION,\n                    done: onAnimationDone,\n                })\n            }\n        },\n        [refs],\n    )\n\n    const mappedRef = useCallback(\n        (id: string) => (ref: HTMLElement | null) => {\n            refs.set(id, ref)\n        },\n        [refs],\n    )\n\n    return { mappedRef, animateRemove }\n}\n\nexport { ANIMATION_TIMEOUT, useToastsAnimation }\n"],"names":["ANIMATION_TIMEOUT","ENTRANCE_TRANSITION","EXIT_TRANSITION","animate","element","transforms","transition","done","fallbackTimeout","setTimeout","forEach","property","from","style","setProperty","transitionEndHandler","event","target","removeEventListener","clearTimeout","addEventListener","window","requestAnimationFrame","to","useToastsAnimation","refs","useMemo","Map","positions","useLayoutEffect","animations","Array","entries","id","delete","prevTop","get","top","height","getBoundingClientRect","push","set","animateRemove","useCallback","onAnimationDone","mappedRef","ref"],"mappings":"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"}