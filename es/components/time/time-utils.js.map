{"version":3,"file":"time-utils.js","sources":["../../../src/components/time/time-utils.ts"],"sourcesContent":["import dayjs from 'dayjs'\n/**\n * There's a problem with our setup where the default export from\n * localizedFormat (and likely every other dayjs plugin) isn't properly\n * recognized. The proposed workarounds (importing with `.js` ending, or adding\n * `allowSyntheticDefaultImports` to the tsconfig) either broke linting or type\n * checking. After spending some time on this it was decided that further\n * investigations are not worth it, the code works and the eslint ignore is fine.\n * ref: https://github.com/iamkun/dayjs/issues/593\n * ref: https://day.js.org/docs/en/installation/typescript\n */\n// eslint-disable-next-line import/default\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat'\n\ndayjs.extend(LocalizedFormat)\n\ntype TimeConfig = {\n    locale?: string\n    longFormat?: string\n    shortFormatCurrentYear?: string\n    shortFormatPastYear?: string\n    daysSuffix?: string\n    hoursSuffix?: string\n    minutesSuffix?: string\n    momentsAgo?: string\n}\n\nconst TimeUtils = {\n    SHORT_FORMAT_CURRENT_YEAR: 'L',\n    SHORT_FORMAT_PAST_YEAR: 'LL',\n    LONG_FORMAT: 'LL, LT',\n\n    timeAgo(timestamp: number, config: TimeConfig = {}) {\n        const {\n            locale = 'en',\n            shortFormatCurrentYear = this.SHORT_FORMAT_CURRENT_YEAR,\n            shortFormatPastYear = this.SHORT_FORMAT_PAST_YEAR,\n            daysSuffix = 'd',\n            hoursSuffix = 'h',\n            minutesSuffix = 'm',\n            momentsAgo = 'moments ago',\n        } = config\n        const now = dayjs()\n        const date = dayjs(timestamp * 1000)\n        date.locale(locale)\n        const diffMinutes = now.diff(date, 'minute')\n        const diffHours = now.diff(date, 'hour')\n        const diffDays = now.diff(date, 'day')\n\n        if (diffDays > 1) {\n            if (date.isSame(now, 'year')) {\n                return date.format(shortFormatCurrentYear)\n            } else {\n                return date.format(shortFormatPastYear)\n            }\n        } else if (diffDays === 1) {\n            return `${diffDays}${daysSuffix}`\n        } else if (diffHours > 0 && diffHours <= 23) {\n            return `${diffHours}${hoursSuffix}`\n        } else if (diffMinutes > 0 && diffMinutes <= 59) {\n            return `${diffMinutes}${minutesSuffix}`\n        } else {\n            return momentsAgo\n        }\n    },\n\n    formatTime(timestamp: number, config: TimeConfig = {}) {\n        const {\n            locale = 'en',\n            shortFormatCurrentYear = this.SHORT_FORMAT_CURRENT_YEAR,\n            shortFormatPastYear = this.SHORT_FORMAT_PAST_YEAR,\n        } = config\n        const date = dayjs(timestamp * 1000)\n        date.locale(locale)\n        if (date.isSame(dayjs(), 'year')) {\n            return date.format(shortFormatCurrentYear)\n        } else {\n            return date.format(shortFormatPastYear)\n        }\n    },\n\n    formatTimeLong(timestamp: number, config: TimeConfig = {}) {\n        const { locale = 'en', longFormat = this.LONG_FORMAT } = config\n        const date = dayjs(timestamp * 1000)\n        date.locale(locale)\n        return date.format(longFormat)\n    },\n}\n\nexport { TimeUtils, TimeConfig }\n"],"names":["dayjs","extend","LocalizedFormat","TimeUtils","SHORT_FORMAT_CURRENT_YEAR","SHORT_FORMAT_PAST_YEAR","LONG_FORMAT","timeAgo","timestamp","config","locale","shortFormatCurrentYear","shortFormatPastYear","daysSuffix","hoursSuffix","minutesSuffix","momentsAgo","now","date","diffMinutes","diff","diffHours","diffDays","isSame","format","formatTime","formatTimeLong","longFormat"],"mappings":"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"}