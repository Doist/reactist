{"version":3,"file":"select.js","sources":["../../../src/components/deprecated-select/select.tsx"],"sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\n\nimport './select.less'\n\ntype Option = {\n    /** Optional key for each option. If not provided `value` is used. */\n    key?: string | number\n    /** Value of the option. */\n    value: string | number\n    /** Text to display for the option. */\n    text?: string | number\n    /** Whether the options is disabled or not. */\n    disabled?: boolean\n}\n\ntype Props = {\n    className?: string\n    disabled?: boolean\n    /** Currently selected value. */\n    value?: string | number\n    /** Callback for the change event. Will be called with the next value (not the full event). */\n    onChange?: (value: string) => void\n    /** Options that are rendered in the select. */\n    options?: Option[]\n    /** Value to initially be set */\n    defaultValue?: string | number\n}\n\nfunction Select({\n    value,\n    options = [],\n    onChange,\n    disabled = true,\n    className = '',\n    defaultValue,\n    ...otherProps\n}: Props) {\n    const selectClassName = classNames('reactist_select', { disabled }, className)\n    return (\n        <select\n            className={selectClassName}\n            value={value}\n            onChange={(event) => (onChange ? onChange(event.target.value) : undefined)}\n            disabled={disabled}\n            defaultValue={defaultValue}\n            {...otherProps}\n        >\n            {options?.map((option) => (\n                <option\n                    key={option.key || option.value}\n                    value={option.value}\n                    disabled={option.disabled}\n                >\n                    {option.text}\n                </option>\n            ))}\n        </select>\n    )\n}\nSelect.displayName = 'Select'\nSelect.defaultProps = {\n    options: [],\n    disabled: false,\n}\n\nexport { Select }\n"],"names":["Select","value","options","onChange","disabled","className","defaultValue","otherProps","selectClassName","classNames","React","createElement","_objectSpread","event","target","undefined","map","option","key","text","displayName","defaultProps"],"mappings":";;;;;;AA6BA,SAASA,MAAT,CAQQ,IAAA,EAAA;EAAA,IARQ;IACZC,KADY;AAEZC,IAAAA,OAAO,GAAG,EAFE;IAGZC,QAHY;AAIZC,IAAAA,QAAQ,GAAG,IAJC;AAKZC,IAAAA,SAAS,GAAG,EALA;AAMZC,IAAAA,YAAAA;GAEI,GAAA,IAAA;AAAA,MADDC,UACC,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACJ,EAAA,MAAMC,eAAe,GAAGC,UAAU,CAAC,iBAAD,EAAoB;AAAEL,IAAAA,QAAAA;GAAtB,EAAkCC,SAAlC,CAAlC,CAAA;AACA,EAAA,oBACIK,KACI,CAAAC,aADJ,CACI,QADJ,EAAAC,cAAA,CAAA;AACIP,IAAAA,SAAS,EAAEG,eADf;AAEIP,IAAAA,KAAK,EAAEA,KAFX;AAGIE,IAAAA,QAAQ,EAAGU,KAAD,IAAYV,QAAQ,GAAGA,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAab,KAAd,CAAX,GAAkCc,SAHpE;AAIIX,IAAAA,QAAQ,EAAEA,QAJd;AAKIE,IAAAA,YAAY,EAAEA,YAAAA;AALlB,GAAA,EAMQC,UANR,CAAA,EAQKL,OARL,IAAA,IAAA,GAAA,KAAA,CAAA,GAQKA,OAAO,CAAEc,GAAT,CAAcC,MAAD,iBACVP,KAAA,CAAAC,aAAA,CAAA,QAAA,EAAA;AACIO,IAAAA,GAAG,EAAED,MAAM,CAACC,GAAP,IAAcD,MAAM,CAAChB,KAD9B;IAEIA,KAAK,EAAEgB,MAAM,CAAChB,KAFlB;IAGIG,QAAQ,EAAEa,MAAM,CAACb,QAAAA;AAHrB,GAAA,EAKKa,MAAM,CAACE,IALZ,CADH,CARL,CADJ,CAAA;AAoBH,CAAA;;AACDnB,MAAM,CAACoB,WAAP,GAAqB,QAArB,CAAA;AACApB,MAAM,CAACqB,YAAP,GAAsB;AAClBnB,EAAAA,OAAO,EAAE,EADS;AAElBE,EAAAA,QAAQ,EAAE,KAAA;AAFQ,CAAtB;;;;"}