{"version":3,"file":"deprecated-button.js","sources":["../../../src/components/deprecated-button/deprecated-button.tsx"],"sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\n\nimport { Tooltip } from '../../tooltip'\n\nimport './deprecated-button.less'\n\ntype NativeButtonProps = React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n>\n\n/** @deprecated */\nexport type ButtonVariant = 'primary' | 'secondary' | 'danger' | 'link'\n\n/** @deprecated */\nexport type ButtonSize = 'default' | 'small' | 'large'\n\n/** @deprecated */\nexport type ButtonProps = Omit<NativeButtonProps, 'title' | 'ref'> & {\n    /**\n     * Loading style. When true it disables the button, but it also adds a visual indication of\n     * some in-progress operation going on.\n     */\n    loading?: boolean\n    /**\n     * Controls visually how the button shows up from a predefined set of kinds of buttons.\n     */\n    variant?: ButtonVariant\n    /**\n     * The size of the button. If not provided it shows up in a normal size.\n     */\n    size?: ButtonSize\n    /**\n     * Tooltip that is displayed on hover.\n     *\n     * This replaces `title` which is not supported for these buttons to avoid confusion.\n     */\n    tooltip?: React.ReactNode\n}\n\n/**\n * @deprecated\n */\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(function Button(\n    {\n        type = 'button',\n        variant,\n        size = 'default',\n        loading = false,\n        disabled = false,\n        tooltip,\n        onClick,\n        children,\n        ...props\n    },\n    ref,\n) {\n    const className = classNames(\n        'reactist_button',\n        variant ? `reactist_button--${variant}` : null,\n        size !== 'default' ? `reactist_button--${size}` : null,\n        { 'reactist_button--loading': loading },\n        props.className,\n    )\n\n    const button = (\n        <button\n            {...props}\n            ref={ref}\n            type={type}\n            className={className}\n            aria-disabled={disabled || loading}\n            onClick={disabled || loading ? undefined : onClick}\n        >\n            {children}\n        </button>\n    )\n\n    return tooltip ? <Tooltip content={tooltip}>{button}</Tooltip> : button\n})\n\nButton.displayName = 'Button'\n\nButton.defaultProps = {\n    size: 'default',\n    loading: false,\n    disabled: false,\n}\n\nexport { Button }\n"],"names":["Button","React","forwardRef","ref","type","variant","size","loading","disabled","tooltip","onClick","children","props","className","classNames","button","createElement","undefined","Tooltip","content","displayName","defaultProps"],"mappings":";;;;;;AAyCA;;AAEG;;AACGA,MAAAA,MAAM,gBAAGC,KAAK,CAACC,UAAN,CAAiD,SAASF,MAAT,CAY5DG,IAAAA,EAAAA,GAZ4D,EAYzD;EAAA,IAXH;AACIC,IAAAA,IAAI,GAAG,QADX;IAEIC,OAFJ;AAGIC,IAAAA,IAAI,GAAG,SAHX;AAIIC,IAAAA,OAAO,GAAG,KAJd;AAKIC,IAAAA,QAAQ,GAAG,KALf;IAMIC,OANJ;IAOIC,OAPJ;AAQIC,IAAAA,QAAAA;GAGD,GAAA,IAAA;AAAA,MAFIC,KAEJ,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AAEH,EAAA,MAAMC,SAAS,GAAGC,UAAU,CACxB,iBADwB,EAExBT,OAAO,GAAuBA,mBAAAA,GAAAA,OAAvB,GAAmC,IAFlB,EAGxBC,IAAI,KAAK,SAAT,yBAAyCA,IAAzC,GAAkD,IAH1B,EAIxB;IAAE,0BAA4BC,EAAAA,OAAAA;AAA9B,GAJwB,EAKxBK,KAAK,CAACC,SALkB,CAA5B,CAAA;EAQA,MAAME,MAAM,gBACRd,KACQ,CAAAe,aADR,CACQ,QADR,oCACQJ,KADR,CAAA,EAAA,EAAA,EAAA;AAEIT,IAAAA,GAAG,EAAEA,GAFT;AAGIC,IAAAA,IAAI,EAAEA,IAHV;AAIIS,IAAAA,SAAS,EAAEA,SAJf;IAKmB,eAAAL,EAAAA,QAAQ,IAAID,OAL/B;AAMIG,IAAAA,OAAO,EAAEF,QAAQ,IAAID,OAAZ,GAAsBU,SAAtB,GAAkCP,OAAAA;AAN/C,GAAA,CAAA,EAQKC,QARL,CADJ,CAAA;AAaA,EAAA,OAAOF,OAAO,gBAAGR,KAAA,CAAAe,aAAA,CAACE,OAAD,EAAS;AAAAC,IAAAA,OAAO,EAAEV,OAAAA;AAAT,GAAT,EAA4BM,MAA5B,CAAH,GAAmDA,MAAjE,CAAA;AACH,CApCc,EAAf;AAsCAf,MAAM,CAACoB,WAAP,GAAqB,QAArB,CAAA;AAEApB,MAAM,CAACqB,YAAP,GAAsB;AAClBf,EAAAA,IAAI,EAAE,SADY;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,QAAQ,EAAE,KAAA;AAHQ,CAAtB;;;;"}